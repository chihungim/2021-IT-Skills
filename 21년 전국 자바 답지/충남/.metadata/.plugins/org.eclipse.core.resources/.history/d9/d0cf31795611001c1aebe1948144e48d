package view;

import java.awt.GridLayout;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;

import view.DeliveryPage.ProductItem;

public class DeliveryPage extends BasePage {
	JPanel scr_p;
	JScrollPane pane;
	int cnt = 0;

	ArrayList<ProductItem> items = new ArrayList<>();

	public DeliveryPage() {
		data();
		ui();
		setRequests();
	}

	void data() {
		try {
			var rs = rs(
					"select pu.pu_No, p.p_Name, u.u_Name, pu.pu_Count, pu.pu_Price, pu.pu_Date, ifnull(r.r_No, 0) from purchase pu inner join product p on p.p_No=pu.p_No inner join user u on u.u_No=pu.u_No left join receive r on r.pu_No=pu.pu_No where s_No="
							+ sno + " and r_No is null order by pu.pu_No");
			while (rs.next()) {
				items.add(new ProductItem(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getInt(5),
						rs.getInt(7)));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	void setRequests() {
		for (int cnt = this.cnt; cnt < this.cnt + 6; cnt++) {

		}
	}

	void ui() {
		add(lbl(sname + "狼 拱前硅价包府", 0, 25), "North");

		add(pane = new JScrollPane(scr_p = new JPanel(new GridLayout(0, 3, 10, 10))));
		pane.getViewport().setOpaque(false);
		setBorder(this, new EmptyBorder(50, 50, 50, 50));
	}

	class ProductItem {
		String name, user;
		int puno, stock, price, receive;

		public ProductItem(int puno, String name, String user, int stock, int price, int receive) {
			this.name = name;
			this.user = user;
			this.puno = puno;
			this.stock = stock;
			this.price = price;
			this.receive = receive;
		}
	}
}
