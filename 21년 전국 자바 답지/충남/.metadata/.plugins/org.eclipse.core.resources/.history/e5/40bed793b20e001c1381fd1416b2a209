package view;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class BaseFrame extends JFrame {
	static String uno, uname;
	static int uold, uheight, udisable;
	static String age[] = ",성인,청소년,어린이,노인".split(",");

	static Statement stmt = db.DB.stmt;
	static Connection con = db.DB.con;

	static {
		try {
			stmt.execute("use adventure");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public BaseFrame(String title, int w, int h) {
		super(title);
		setSize(w, h);
		setDefaultCloseOperation(2);
		setLocationRelativeTo(null);
		getContentPane().setBackground(Color.WHITE);
	}

	JLabel imglbl(String sql, int w, int h) {
		try {
			var rs = stmt.executeQuery(sql);
			if (rs.next()) {
				return new JLabel(
						new ImageIcon(Toolkit.getDefaultToolkit().createImage(rs.getBytes(rs.getByte("r_img")))));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	ImageIcon img(String path, int w, int h) {
		return new ImageIcon(Toolkit.getDefaultToolkit().getImage(path).getScaledInstance(w, h, Image.SCALE_SMOOTH));
	}

	ImageIcon img(String path) {
		return new ImageIcon(Toolkit.getDefaultToolkit().getImage(path));
	}

	static int getAge(LocalDate date) {
		int year = date.getYear();
		int age = 0;
		for (int i = year + 1; i <= LocalDate.now().getYear(); i++) {
			if (LocalDate.of(i, date.getMonthValue(), date.getDayOfMonth()).isBefore(LocalDate.now())
					|| LocalDate.of(i, date.getMonthValue(), date.getDayOfMonth()).isEqual(LocalDate.now()))
				age++;
		}

		return age;
	}

	void eMsg(String msg) {
		JOptionPane.showMessageDialog(null, msg, "경고", JOptionPane.ERROR_MESSAGE);
	}

	void iMsg(String msg) {
		JOptionPane.showMessageDialog(null, msg, "정보", JOptionPane.INFORMATION_MESSAGE);
	}

	JButton btn(String text, ActionListener a) {
		JButton b = new JButton(text);
		b.addActionListener(a);
		return b;
	}

	JLabel lbl(String text, int alig) {
		return new JLabel(text, alig);
	}

	JLabel lbl(String text, int alig, int size) {
		JLabel l = new JLabel(text, alig);
		l.setFont(new Font("맑은고딕", Font.BOLD, size));
		return l;
	}

	DefaultTableModel model(String col[]) {
		var m = new DefaultTableModel(null, col) {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};

		return m;
	}

	JTable table(DefaultTableModel m, int tablealign) {
		var dtcr = new DefaultTableCellRenderer();
		dtcr.setHorizontalAlignment(tablealign);

		var table = new JTable(m);
		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		table.getTableHeader().setReorderingAllowed(false);
		table.getTableHeader().setResizingAllowed(false);
		return table;
	}

	void addRow(DefaultTableModel m, String sql) {
		m.setRowCount(0);
		try {
			var rs = stmt.executeQuery(sql);
			while (rs.next()) {
				Object row[] = new Object[m.getColumnCount()];
				for (int i = 0; i < row.length; i++) {
					row[i] = rs.getString(i + 1);
				}
				m.addRow(row);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	int rei(Object obj) {
		return obj.toString().isEmpty() ? 0 : Integer.parseInt(obj.toString());
	}

	int val(Object obj) {
		int i = rei(obj.toString().replaceAll("[^0-9]", ""));
		return i == 0 ? 0 : i;
	}

	static void setLogin(int no) {
		try {
			var rs = stmt.executeQuery("select * from user where u_no=" + no);
			if (rs.next()) {
				uno = rs.getString(1);
				uname = rs.getString(2);
				uheight = rs.getInt(5);
				uold = getAge(LocalDate.parse(rs.getString(6)));
				udisable = rs.getInt(8);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	class IconLabel extends JLabel {
		String titl;

		public IconLabel(String title, boolean enb) {
			super("", img("./datafiles/아이콘.png", 25, 30), 0);
		}

		public IconLabel(String title, String floor) {
		}
	}

}
